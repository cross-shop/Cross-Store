import React, { useState } from "react";
import "./style.css";

const AddProduct = () => {
  const [name, setProductName] = useState("");
  const [avatar, setAvatar] = useState("");
  const [price, setPrice] = useState("");
  const [category, setCategory] = useState("");
  const [message, setMessage] = useState("");
  const [error, setError] = useState("");

  const MIN_WIDTH = 200;
  const MIN_HEIGHT = 200;

  const validateImageSize = (url) => {
    return new Promise((resolve, reject) => {
      const img = new Image();
      img.onload = function () {
        if (this.width >= MIN_WIDTH && this.height >= MIN_HEIGHT) {
          resolve(true);
        } else {
          reject(`–°“Ø—Ä”©—Ç ”©—Ç”© –∫–∏—á–∏–Ω–µ–∫–µ–π. –ö–µ–º–∏–Ω–¥–µ ${MIN_WIDTH}x${MIN_HEIGHT}px –±–æ–ª—É—à—É –∫–µ—Ä–µ–∫.`);
        }
      };
      img.onerror = () => reject("–°“Ø—Ä”©—Ç –∂“Ø–∫—Ç”©–ª–±”©–π –∫–∞–ª–¥—ã. URL —Ç—É—É—Ä–∞–±—ã?");
      img.src = url;
    });
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    setMessage("");
    setError("");

    // üõë –í–∞–ª–∏–¥–∞—Ü–∏—è
    if (!name || !avatar || !price || !category) {
      setError("–ë–∞—Ä–¥—ã–∫ —Ç–∞–ª–∞–∞–ª–∞—Ä–¥—ã —Ç–æ–ª—Ç—É—Ä—É—É –º–∏–ª–¥–µ—Ç—Ç“Ø“Ø!");
      return;
    }

    try {
      await validateImageSize(avatar);
    } catch (errMsg) {
      setError(errMsg);
      return;
    }

    const productData = {
      name,
      avatar,
      price,
      category,
      id: Date.now().toString(),
    };

    try {
      const response = await fetch(
        "https://66dfd7322fb67ac16f2740dd.mockapi.io/product",
        {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify(productData),
        }
      );

      if (response.ok) {
        setMessage("‚úÖ –ü—Ä–æ–¥—É–∫—Ç –∏–π–≥–∏–ª–∏–∫—Ç“Ø“Ø –∫–æ—à—É–ª–¥—É!");
        setTimeout(() => setMessage(""), 3000);
        window.location.href = "/productlist";
      } else {
        setError("‚ùå –ü—Ä–æ–¥—É–∫—Ç –∫–æ—à—É—É–¥–∞ –∫–∞—Ç–∞ –∫–µ—Ç—Ç–∏!");
      }
    } catch (error) {
      setError("‚ùå –°–µ—Ä–≤–µ—Ä–¥–µ–≥–∏ –∫–∞—Ç–∞ –∂–µ —Ç–∞—Ä–º–∞–∫ –º–∞—Å–µ–ª–µ—Å–∏.");
    }
  };

  return (
    <div className="form-container">
      <form className="add-product-form" onSubmit={handleSubmit}>
        <h2>–ñ–∞“£—ã –ø—Ä–æ–¥—É–∫—Ç –∫–æ—à—É—É</h2>
        <input
          type="text"
          placeholder="–ü—Ä–æ–¥—É–∫—Ç –∞—Ç—ã"
          value={name}
          onChange={(e) => setProductName(e.target.value)}
        />
        <input
          type="text"
          placeholder="–°“Ø—Ä”©—Ç—Ç“Ø–Ω URL"
          value={avatar}
          onChange={(e) => setAvatar(e.target.value)}
        />
        <input
          type="number"
          placeholder="–ë–∞–∞—Å—ã (—Å–æ–º)"
          value={price}
          onChange={(e) => setPrice(e.target.value)}
        />
        <select
          value={category}
          onChange={(e) => setCategory(e.target.value)}
        >
          <option value="">–ö–∞—Ç–µ–≥–æ—Ä–∏—è–Ω—ã —Ç–∞–Ω–¥–∞“£—ã–∑</option>
          <option value="nike">–∫–æ–º–ø–æ–Ω–µ–Ω—Ç1 nike</option>
          <option value="puma">–∫–æ–º–ø–æ–Ω–µ–Ω—Ç2 puma</option>
          <option value="jordan">–∫–æ–º–ø–æ–Ω–µ–Ω—Ç3 jordan</option>
          <option value="lining">–∫–æ–º–ø–æ–Ω–µ–Ω—Ç4 lining</option>
        </select>
        <button type="submit">‚ûï –ö–æ—à—É—É</button>
        {message && <p className="success-message">{message}</p>}
        {error && <p className="error-message">{error}</p>}
      </form>
    </div>
  );
};

export default AddProduct;
